(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{175:function(t,e,i){"use strict";i.r(e);var r=i(0),a=Object(r.a)({},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),i("p",[t._v("和revert的区别：reset命令会抹去某个commit id之后的所有commit")]),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),i("ul",[i("li",[i("a",{attrs:{href:"https://github.com/magicLaLa/git-tips",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/magicLaLa/git-tips"),i("OutboundLink")],1)]),t._v(" "),i("li",[t._v("Fork => https://github.com/521xueweihan")])]),t._v(" "),t._m(17),t._v(" "),i("ul",[t._m(18),t._v(" "),t._m(19),t._v(" "),i("li",[i("p",[t._v("SourceTree拥有可视化界面的项目版本控制软件，适用于git项目管理")]),t._v(" "),i("p",[t._v("基本使用: "),i("a",{attrs:{href:"https://www.cnblogs.com/tian-xie/p/6264104.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.cnblogs.com/tian-xie/p/6264104.html"),i("OutboundLink")],1)])])]),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"关于git的总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关于git的总结","aria-hidden":"true"}},[this._v("#")]),this._v(" 关于git的总结")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git操作","aria-hidden":"true"}},[this._v("#")]),this._v(" git操作")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"合并某个分支上的文件到应一个分支、回退到某个版本和-远程服务器上面回退到某个版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并某个分支上的文件到应一个分支、回退到某个版本和-远程服务器上面回退到某个版本","aria-hidden":"true"}},[this._v("#")]),this._v(" 合并某个分支上的文件到应一个分支、回退到某个版本和 远程服务器上面回退到某个版本")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ol",[i("li",[i("p",[t._v("git 合并某个分支上的文件到另一个分支上")]),t._v(" "),i("pre",[i("code",[t._v(" git checkout branch <path>\n")])])]),t._v(" "),i("li",[i("p",[t._v("git 本地回退到某个版本")]),t._v(" "),i("pre",[i("code",[t._v(" git reset --hard 23bc94cf7e3c74c33dd4575dfbf72d6647333795\n")])])]),t._v(" "),i("li",[i("p",[t._v("git 远程服务器上面回退到某个版本")]),t._v(" "),i("pre",[i("code",[t._v(" 可以 先把本地回退到某个版本\n     例如：git reset --hard 23bc94cf7e3c74c33dd4575dfbf72d6647333795\n 然后再 强推到远程上面\n     git push -f\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"tag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tag","aria-hidden":"true"}},[this._v("#")]),this._v(" Tag")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ul",[i("li",[i("p",[i("code",[t._v("git tag")]),t._v("查看所有的标签")])]),t._v(" "),i("li",[i("p",[i("code",[t._v("git tag -d tagName")]),t._v(" 删除某个标签")])]),t._v(" "),i("li",[i("p",[i("code",[t._v('git tag -a newName -m "注释"')]),t._v(" 创建一个带注释的标签")])]),t._v(" "),i("li",[i("p",[i("code",[t._v("git tag newName")]),t._v(" 创建一个轻量级标签")])]),t._v(" "),i("li",[i("p",[i("code",[t._v("git checkout tagName")]),t._v(" 切换到某个标签")])]),t._v(" "),i("li",[i("p",[t._v("可以按照特定的表达式搜索某些标签")]),t._v(" "),i("pre",[i("code",[t._v("  $ git tag -l v1.2.*\n    v1.2.1\n    v1.2.2\n    v1.2.3\n")])])]),t._v(" "),i("li",[i("p",[i("code",[t._v("git push --tags")]),t._v(" 默认情况下，"),i("code",[t._v("git push")]),t._v(" 不会把 tag 上传到远程，为了共享这个 tag，可以在 git push 后面加 "),i("code",[t._v("--tags")])])]),t._v(" "),i("li",[i("p",[i("code",[t._v("git stash")]),t._v(" 暂存区和工作区的状态都会被保存")])]),t._v(" "),i("li",[i("p",[i("code",[t._v("git show tagName")]),t._v(" 查看该标签的信息")])]),t._v(" "),i("li",[i("p",[t._v("注意 "),i("em",[i("code",[t._v("tag")]),t._v("实际指向的是一次"),i("code",[t._v("commit")]),t._v("，"),i("code",[t._v("show tagName")]),t._v("展示出来的"),i("code",[t._v("diff")]),t._v("也是该次"),i("code",[t._v("commit")]),t._v("的"),i("code",[t._v("diff")])])])]),t._v(" "),i("li",[i("p",[t._v("删除本地标签 "),i("code",[t._v("git tag -d 标签名")])])]),t._v(" "),i("li",[i("p",[t._v("删除远程标签 "),i("code",[t._v("git push origin :refs/tags/标签名")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"git-推送本地分支到远程和拉去远程分支到本地"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-推送本地分支到远程和拉去远程分支到本地","aria-hidden":"true"}},[this._v("#")]),this._v(" git 推送本地分支到远程和拉去远程分支到本地")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("    git push <远程主机名> <远程分支名>:<远程分支名>\n    git fetch origin <远程分支名>:<远程分支名>\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"git-回到远程仓库的状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-回到远程仓库的状态","aria-hidden":"true"}},[this._v("#")]),this._v(" git 回到远程仓库的状态")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("    git fetch --all && git reset --hard origin/master\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"git-放弃工作区的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-放弃工作区的修改","aria-hidden":"true"}},[this._v("#")]),this._v(" git 放弃工作区的修改")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("    git checkout <file-name>\n    放弃所有更改:\n    git checkout .\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"以新增一个commit的方式还原某一个commit的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#以新增一个commit的方式还原某一个commit的修改","aria-hidden":"true"}},[this._v("#")]),this._v(" 以新增一个commit的方式还原某一个commit的修改")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("    git revert <commit-id>\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"回到某个commit的状态，并删除后面的commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回到某个commit的状态，并删除后面的commit","aria-hidden":"true"}},[this._v("#")]),this._v(" 回到某个commit的状态，并删除后面的commit")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("    git reset <commit-id>  #默认就是-mixed参数。\n\n    git reset –mixed HEAD^  #回退至上个版本，它将重置HEAD到另外一个commit,并且重置暂存区以便和HEAD相匹配，但是也到此为止。工作区不会被更改。\n\n    git reset –soft HEAD~3  #回退至三个版本之前，只回退了commit的信息，暂存区和工作区与回退之前保持一致。如果还要提交，直接commit即可   \n\n    git reset –hard <commit-id>  #彻底回退到指定commit-id的状态，暂存区和工作区也会变为指定commit-id版本的内容\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"以上是常用的几种，更多关于git的操作请访问："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#以上是常用的几种，更多关于git的操作请访问：","aria-hidden":"true"}},[this._v("#")]),this._v(" 以上是常用的几种，更多关于git的操作请访问：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git设置、powershell-插件-posh-git-安装、可视化界面的项目版本控制软件，适用于git项目管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git设置、powershell-插件-posh-git-安装、可视化界面的项目版本控制软件，适用于git项目管理","aria-hidden":"true"}},[this._v("#")]),this._v(" git设置、PowerShell 插件 posh-git 安装、可视化界面的项目版本控制软件，适用于git项目管理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("Git 设置")]),this._v(" "),e("pre",[e("code",[this._v('  # 设置提交时的用户信息\n  git config --global user.name "用户名"\n  git config --global user.email "邮箱"\n\n  # 禁用git自动LF转CRLF\n  git config --global core.autocrlf false\n\n  # 生成密钥（默认文件名id_rsa）\n  # -t 密钥类型\n  # -C 注释\n  ssh-keygen -t rsa -C "邮箱"\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("PowerShell 插件 posh-git 安装")]),this._v(" "),e("pre",[e("code",[this._v("  VSCode 默认使用PowerShell，启动powershell，分别执行下面3个命令（提示都输入Yes）\n\n  # 1.设置权限\n  Set-ExecutionPolicy RemoteSigned -Scope CurrentUser -Confirm\n\n  # 2.使用PowerShellGet安装\n  PowerShellGet\\Install-Module posh-git -Scope CurrentUser\n\n  # 3.全局导入posh-git\n  Add-PoshGitToProfile -AllHosts\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git的报错信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git的报错信息","aria-hidden":"true"}},[this._v("#")]),this._v(" git的报错信息")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"在-git-commit-或者-git-add-的时候报-git-fatal-unable-to-create-f-vue-learning-git-index-lock-file-exists-这个错误"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在-git-commit-或者-git-add-的时候报-git-fatal-unable-to-create-f-vue-learning-git-index-lock-file-exists-这个错误","aria-hidden":"true"}},[this._v("#")]),this._v(" 在 git commit 或者 git add 的时候报 Git: fatal: Unable to create 'f:/Vue-learning/.git/index.lock': File exists. 这个错误")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("git 遇到这个错误时，需要把 当前项目下 .git -> index.lock 这个文件删除即可")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/img/1323758-20180206172305857-1172749425.png",alt:"Alt text"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"git-merge-冲突，提示you-have-not-concluded-your-merge-merge-head-exists"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-merge-冲突，提示you-have-not-concluded-your-merge-merge-head-exists","aria-hidden":"true"}},[this._v("#")]),this._v(" git merge 冲突，提示You have not concluded your merge (MERGE_HEAD exists)")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("    You have not concluded your merge (MERGE_HEAD exists).\n    Please, commit your changes before you can merge.\n\n    可以先撤销合并(git的版本不同撤销命令也不同)\n\n    git merge --abort [Since git version 1.7.4]\n    git reset --merge [prior git versions]\n")])])}],!1,null,null,null);a.options.__file="git的一些总结.md";e.default=a.exports}}]);