<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>git on Magic</title>
    <link>/categories/git/</link>
    <description>Recent content in git on Magic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 02 Jun 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>git commit emoji 使用指南</title>
      <link>/2017/git-commit-emoji/</link>
      <pubDate>Fri, 02 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/git-commit-emoji/</guid>
      <description>git commit emoji 使用指南 目录  commit 格式 emoji 指南 如何在命令行中显示 emoji 参考  git commit emoji write a good commit message    执行 git commit 时使用 emoji 为本次提交打上一个 &amp;ldquo;标签&amp;rdquo;, 使得此次 commit 的主要工作得以凸现，也能够使得其在整个提交历史中易于区分与查找。
截取的 gitmoji 快照:
commit 格式 git commit 时，提交信息遵循以下格式：
:emoji1: :emoji2: 不超过 50 个字的摘要，首字母大写，使用祈使语气，句末不要加句号提交信息主体引用相关 issue 或 PR 编号 &amp;lt;#110&amp;gt;初次提交示例：
git commit -m &amp;#34;🎉 Initialize Repo&amp;#34;emoji 指南    emoji emoji 代码 commit 说明     🎉 (庆祝) tada 初次提交   ✨ (火花) sparkles 引入新功能   🔖 (书签) bookmark 发行/版本标签   🐛 (bug) bug 修复 bug   🚑 (急救车) ambulance 重要补丁   🌐 (地球) globe_with_meridians 国际化与本地化   💄 (口红) lipstick 更新 UI 和样式文件   🚨 (警车灯) rotating_light 移除 linter 警告   🔧 (扳手) wrench 修改配置文件   ➕ (加号) heavy_plus_sign 增加一个依赖   ➖ (减号) heavy_minus_sign: 减少一个依赖   ⬆ (上升箭头) arrow_up 升级依赖   ⬇ (下降箭头) arrow_down 降级依赖   ⚡ (闪电)🐎 (赛马) zapracehorse 提升性能   📈 (上升趋势图) chart_with_upwards_trend 添加分析或跟踪代码   🚀 (火箭) rocket 部署功能   ✅ (白色复选框) white_check_mark 增加测试   📝 (备忘录) memo 撰写文档   🔨 (锤子) hammer 重大重构   🎨 (调色板) art 改进代码结构/代码格式   🔥 (火焰) fire 移除代码或文件   ✏ (铅笔) pencil2 修复 typo   🚧 (施工) construction 工作进行中   👷 (工人) construction_worker 添加 CI 构建系统   💚 (绿心) green_heart 修复 CI 构建问题   🔒 (锁) lock 修复安全问题   🐋 (鲸鱼) whale Docker 相关工作   🍎 (苹果) apple 修复 macOS 下的问题   🐧 (企鹅) penguin 修复 Linux 下的问题   🏁 (旗帜) checkered_flag 修复 Windows 下的问题     需要用 ::包裹住 emoji 代码  如何在命令行中显示 emoji 默认情况下，在命令行中并不会显示出 emoji, 仅显示 emoji 代码。不过可以使用 emojify 使得在命令行也可显示 emoji, 它是一个 shell 脚本，安装与使用都很简单，在 这里 查看如何安装与使用。</description>
    </item>
    
    <item>
      <title>git 相关总结</title>
      <link>/2017/git-summary/</link>
      <pubDate>Fri, 02 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/git-summary/</guid>
      <description>关于git的总结 git工作流 git相关   git 提交规范
  git 简明指南
  git 在线教程
  git pro 中文教程
  Commitizen是一个撰写合格 Commit message 的工具。
  1.安装命令如下:
npm install -g commitizen2.然后，在项目目录里，运行下面的命令，使其支持 Angular 的 Commit message 格式
commitizen init cz-conventional-changelog --save --save-exact3.以后，凡是用到git commit命令，一律改为使用git cz。这时，就会出现选项，用来生成符合格式的 Commit message
 更多关于Commit message 和 Change log 编写指南可以到Commit message 和 Change log 编写指南查看&amp;hellip;  git操作 合并某个分支上的文件到应一个分支、回退到某个版本和 远程服务器上面回退到某个版本  git 合并某个分支上的文件到另一个分支上git checkout branch &amp;lt;path&amp;gt; git 本地回退到某个版本  git reset --hard 23bc94cf7e3c74c33dd4575dfbf72d6647333795git 远程服务器上面回退到某个版本  # 可以 先把本地回退到某个版本# 例如：git reset --hard 23bc94cf7e3c74c33dd4575dfbf72d6647333795# 然后再 强推到远程上面git push -f删除远程仓库上的某个文件夹 # 查看有哪些文件夹$ dir# 删除某个文件夹（本地项目中的文件夹不受操作影响,删除的只是远程仓库中的文件夹）$ git rm -r --cached target# 提交,添加操作说明$ git commit -m &amp;#39;删除了xxx文件夹&amp;#39;# 列子git rm -r --cached .</description>
    </item>
    
  </channel>
</rss>