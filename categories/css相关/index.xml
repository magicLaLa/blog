<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSS相关 on Magic</title>
    <link>/categories/css%E7%9B%B8%E5%85%B3/</link>
    <description>Recent content in CSS相关 on Magic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 18 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/css%E7%9B%B8%E5%85%B3/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>css3 适配iphoneX 安全区域</title>
      <link>/2019/%E9%80%82%E9%85%8Diphonex/</link>
      <pubDate>Tue, 18 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/%E9%80%82%E9%85%8Diphonex/</guid>
      <description>iphoneX 适配 第一步：设置网页在可视窗口的布局方式  ios11 引入 meta 标签的 viewpoint 扩展属性 viewpoint-fit，在 iOS 11 中 viewpoint-fit 也官方添加到 CSS Round Display 规范中了。 viewport-fit 有三个属性值：  Auto：默认值。这个值不影响初始布局视窗，整个 Web 页面是可视的。 Contain：最初的布局视窗和视觉布局视窗被设置为最大的矩形。 Cover：初始布局视窗和视觉布局视窗被设置为设备物理屏幕的限定矩形。    所以我们可以通过 viewpoint-fit=cover 来解决问题，使页面内容跳出安全区域的框框。
&amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width,initial-scale=1.0,user-scalable=0,viewport-fit=cover&amp;#34;&amp;gt;第二步：页面主体内容限定在安全区域内   IOS11 提供了两个个新的 css 变量 env(safe-area-inset-※) 和 constant(safe-area-inset-※)
  safe-area-inset-※ 提供了四个方向的值：
 safe-area-inset-top：在 Viewport 顶部的安全区域内设置量； safe-area-inset-bottom：在 Viewport 底部的安全区域内设置量； safe-area-inset-left：在 Viewport 左边的安全区域内设置量； safe-area-inset-right：在 Viewport 右边的安全区域内设置量；    constant() 和 env() 这个变量已经开始着手标准化，目前也可以被用在 margin、padding、top、bottom、left、right 等 css 属性中，同时在不支持的环境中将不会生效。而且，同样在 iOS 11 中，iPhone X 机型以下得到的值均为 0，iPhone X 得到其对应的设置量。</description>
    </item>
    
    <item>
      <title>行内样式</title>
      <link>/2019/%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0/</link>
      <pubDate>Tue, 18 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0/</guid>
      <description>行内元素 img 元素外面包裹住一个块元素，实现自适应，然后块元素底部会有留白，类似下面这样：  是因为行内元素有行高，可以设置为 display: block; 转换为块元素，或者设置 vertical-align: top，可以解决。</description>
    </item>
    
    <item>
      <title>text-decoration 文本修饰</title>
      <link>/2017/%E6%96%87%E6%9C%AC%E4%BF%AE%E9%A5%B0/</link>
      <pubDate>Fri, 02 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/%E6%96%87%E6%9C%AC%E4%BF%AE%E9%A5%B0/</guid>
      <description> 项目使用是用来 做下划线等，例如减免邮费等。如果在父元素上设置值为line-through，然后字元素有多个，font-size相同的情况下样式正确，font-size不同的情况下，会找自身元素的中间位置添加下划线。 text-decoration 属性规定添加到文本的修饰。 修饰的颜色由 &amp;ldquo;color&amp;rdquo; 属性设置。  h1 {text-decoration:overline}h2 {text-decoration:line-through}h3 {text-decoration:underline}h4 {text-decoration:blink} 可能的值  none	#默认。定义标准的文本。underline	#定义文本下的一条线。overline	#定义文本上的一条线。line-through	#定义穿过文本下的一条线。blink	#定义闪烁的文本。inherit	#规定应该从父元素继承 text-decoration 属性的值。</description>
    </item>
    
  </channel>
</rss>