<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>leetCode on Magic</title>
    <link>/categories/leetcode/</link>
    <description>Recent content in leetCode on Magic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 02 Jun 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/leetcode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>leetCode Easy One</title>
      <link>/2017/leetcode-easy/</link>
      <pubDate>Fri, 02 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/leetcode-easy/</guid>
      <description>Two Sum 两数之和(1)  给定一个整数数组，返回两个数字的索引，使它们相加到特定目标。您可以假设每个输入只有一个解决方案，并且您可能不会两次使用相同的元素。 例子：  Given nums = [2, 7, 11, 15], target = 9,Because nums[0] + nums[1] = 2 + 7 = 9,return [0, 1]. 解:  /*** @param {number[]} nums* @param {number} target* @return {number[]}*/var twoSum = function(nums, target) {// 第一种 let map = new Map()for (let i = 0; i &amp;lt; nums.length; i++) {if (map.</description>
    </item>
    
    <item>
      <title>leetCode Medium</title>
      <link>/2017/leetcode-medium/</link>
      <pubDate>Fri, 02 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/leetcode-medium/</guid>
      <description>Add Two Numbers 两数相加(2)   给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。
  如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。
  您可以假设除了数字 0 之外，这两个数都不会以 0 开头。
  例子:
  Input: (2 -&amp;gt; 4 -&amp;gt; 3) + (5 -&amp;gt; 6 -&amp;gt; 4)Output: 7 -&amp;gt; 0 -&amp;gt; 8Explanation: 342 + 465 = 807 解:  // 单链表的定义function ListNode(val) {this.val = val;this.next = null;}// 第一种/*** @param {ListNode} l1* @param {ListNode} l2* @return {ListNode}*/var addTwoNumbers = function(l1, l2) {if (l1===null) return l2;if (l2===null) return l1;//new a ListNode here, with head.</description>
    </item>
    
  </channel>
</rss>