<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>杂项 on Magic</title>
    <link>/categories/%E6%9D%82%E9%A1%B9/</link>
    <description>Recent content in 杂项 on Magic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 18 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/%E6%9D%82%E9%A1%B9/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>组件设计</title>
      <link>/2019/%E7%BB%84%E4%BB%B6%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Tue, 18 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/%E7%BB%84%E4%BB%B6%E8%AE%BE%E8%AE%A1/</guid>
      <description>根据 UI 划分组件层级  可以将组件当作一种函数或者是对象来考虑，根据单一功能原则来判定组件的范围。也就是说，一个组件原则上只能负责一个功能。如果它需要负责更多的功能，这时候就应该考虑将它拆分成更小的组件。 可以尝试自下而上构建应用。 通过问自己以下三个问题，你可以逐个检查相应数据是否属于 state：  该数据是否是由父组件通过 props 传递而来的？如果是，那它应该不是 state。 该数据是否随时间的推移而保持不变？如果是，那它应该也不是 state。 你能否根据其他 state 或 props 计算出该数据的值？如果是，那它也不是 state。    </description>
    </item>
    
    <item>
      <title>Windows Terminal 美化</title>
      <link>/1/windowsterminal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/1/windowsterminal/</guid>
      <description>参考和部分引用自: SpencerWoo：新生代 Windows 终端：Windows Terminal 的全面自定义
Windows Terminal 美化 安装 Windows Terminal  可以到 Microsoft Store 中安装 Windows Terminal（Preview）   也可以从 https://github.com/microsoft/terminal 来安装  使用 scoop 来管理软件  用 Scoop 管理你的 Windows 软件 可以使用 scoop help 来查看更多命令 scoop 语法 scoop + 动作 + 对象，对象是可以省略的 scoop bucket add nerd-fonts 用来添加字体库，后续需要使用这个 scoop search FantasqueSansMono-NF 搜索需要安装的字体，下图所示   scoop install FantasqueSansMono-NF 安装字体  安装 oh-my-posh  官网 安装 posh-git 和 oh-my-posh 这两个模块  Install-Module posh-git -Scope CurrentUser Install-Module oh-my-posh -Scope CurrentUser让 PowerShell 主题配置生效  新增（或修改）你的 PowerShell 配置文件  # 如果之前没有配置文件，就新建一个 PowerShell 配置文件if (!</description>
    </item>
    
    <item>
      <title>常用代理设置汇总</title>
      <link>/1/%E4%BB%A3%E7%90%86%E7%9B%B8%E5%85%B3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/1/%E4%BB%A3%E7%90%86%E7%9B%B8%E5%85%B3/</guid>
      <description>常用代理设置汇总 设置代理是为了这几种情况：
 翻墙 从 内网 访问 外网 从 内网 访问 内网镜像库（npm、composer 等）  代理方式 代理设置至少有以下几种方式：
 设置目标代理机器（常用）如：http://yourProxyServer:port 设置 pac 自动匹配代理（常用于浏览器）如：http://example/a.pac  代理地址 假设你目前可用的代理是：http://yourProxyServer:port，后面例子均以此代理作为示范。
Windows CMD 代理设置 当前 CMD 窗口有效：
REM 设置代理 set http_proxy=http://yourProxyServer:portset https_proxy=http://yourProxyServer:portREM 查看代理 echo %http_proxy%echo %https_proxy%REM 取消代理(留空即可) set http_proxy=set https_proxy=若想一直有效，设置系统环境变量：http_proxy、https_proxy，并重启你的 Windows。
注意：
 http_proxy 和 https_proxy 对应的都是 http://yourProxyServer:port，后者可能没有 https 的 s  Linux 代理设置 同下面 Mac 代理设置 ↓</description>
    </item>
    
  </channel>
</rss>